import React, { useState, useEffect, useCallback, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { ArrowLeft, RotateCcw } from 'lucide-react';
import anime from 'animejs';
import Logo from './common/Logo';
import replicateService from '../services/replicate'; // ACTIVATED FOR PRODUCTION

const ProcessingPage = ({ onBack, onComplete, tryOnData }) => {
  const [progress, setProgress] = useState(0);
  const [processingStatus, setProcessingStatus] = useState('starting');
  const [predictionId, setPredictionId] = useState(null);
  const [error, setError] = useState(null);
  const [generatedImage, setGeneratedImage] = useState(null);
  const [isRetrying, setIsRetrying] = useState(false);
  const [isCompleted, setIsCompleted] = useState(false);
  const [lowResBlurImage, setLowResBlurImage] = useState(null);
  
  // Refs –¥–ª—è anime.js
  const blurOverlayRef = useRef(null);

  // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ª–æ–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    console.log('üîç ProcessingPage tryOnData:', tryOnData);
    console.log('üîç outfitImage:', tryOnData?.outfitImage);
    console.log('üîç outfitImage.url:', tryOnData?.outfitImage?.url);
  }, [tryOnData]);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º isGenerating –∑–¥–µ—Å—å, –¥–æ useEffect'–æ–≤
  const isGenerating = !isCompleted && processingStatus !== 'failed' && !error;
  const showControls = isCompleted || error;

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∏–∑–∫–æ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è blur-–∑–∞–≥–ª—É—à–∫–∏
  const createLowResBlurImage = useCallback((imageUrl) => {
    return new Promise((resolve) => {
      const img = new Image();
      img.crossOrigin = 'anonymous';
      
      img.onload = () => {
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ (15px)
        const lowResSize = 15;
        canvas.width = lowResSize;
        canvas.height = lowResSize;
        
        // –†–∏—Å—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –º–∞–ª–µ–Ω—å–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏
        ctx.drawImage(img, 0, 0, lowResSize, lowResSize);
        
        // –ü–æ–ª—É—á–∞–µ–º data URL –Ω–∏–∑–∫–æ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏
        const lowResDataUrl = canvas.toDataURL('image/jpeg', 0.5);
        resolve(lowResDataUrl);
      };
      
      img.onerror = () => {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
        resolve(imageUrl);
      };
      
      img.src = imageUrl;
    });
  }, []);

  // –°–æ–∑–¥–∞–µ–º blur-–≤–µ—Ä—Å–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (tryOnData?.personImage?.url && !lowResBlurImage) {
      createLowResBlurImage(tryOnData.personImage.url)
        .then(setLowResBlurImage);
    }
  }, [tryOnData, createLowResBlurImage, lowResBlurImage]);

  const handleSuccess = useCallback((result) => {
    console.log('‚úÖ Try-on generation completed:', result);
    
    setProgress(100);
    setProcessingStatus('completed');
    setGeneratedImage(result.output);
    setIsCompleted(true);
    
    // –ë—ã—Å—Ç—Ä–æ –∑–∞–≤–µ—Ä—à–∞–µ–º blur –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã
    if (blurOverlayRef.current) {
      console.log('üöÄ –ë—ã—Å—Ç—Ä–æ –∑–∞–≤–µ—Ä—à–∞—é blur –∞–Ω–∏–º–∞—Ü–∏—é...');
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∞–Ω–∏–º–∞—Ü–∏—é
      anime.remove(blurOverlayRef.current);
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –±—ã—Å—Ç—Ä–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
      anime({
        targets: blurOverlayRef.current,
        translateY: '100%', // –î–æ–µ–∑–∂–∞–µ–º –¥–æ –∫–æ–Ω—Ü–∞
        duration: 2000, // 2 —Å–µ–∫—É–Ω–¥—ã
        easing: 'easeOutQuart', // –ü–ª–∞–≤–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ
        complete: () => {
          // –°–∫—Ä—ã–≤–∞–µ–º overlay –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
          if (blurOverlayRef.current) {
            blurOverlayRef.current.style.display = 'none';
          }
        }
      });
    }
  }, []);

  const handleError = useCallback((error) => {
    console.error('‚ùå Try-on generation failed:', error);
    setError(error.message || 'Generation failed');
    setProcessingStatus('failed');
    setIsCompleted(true);
  }, []);

  // –ó–∞–ø—É—Å–∫ blur –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ –ø—Ä–æ–≥—Ä–µ—Å—Å—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  useEffect(() => {
    if (blurOverlayRef.current && isGenerating && !isCompleted) {
      console.log('üé¨ –ù–∞—á–∏–Ω–∞—é blur –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
      blurOverlayRef.current.style.transform = 'translateY(0%)';
      blurOverlayRef.current.style.display = 'block';
    }
  }, [isGenerating, isCompleted]); // –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

  // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é blur overlay –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  useEffect(() => {
    if (blurOverlayRef.current && isGenerating && progress > 0 && !isCompleted) {
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é blur overlay –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (0-100%)
      // 0% –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ = 0% –¥–≤–∏–∂–µ–Ω–∏—è, 90% –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ = 90% –¥–≤–∏–∂–µ–Ω–∏—è (–æ—Å—Ç–∞–≤–ª—è–µ–º 10% –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)
      const blurPosition = Math.min(progress * 0.9, 90); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 90%
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ transform
      blurOverlayRef.current.style.transform = `translateY(${blurPosition}%)`;
      
      console.log(`üé¨ Blur –ø–æ–∑–∏—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${blurPosition}% (–ø—Ä–æ–≥—Ä–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${progress}%)`);
    }
  }, [progress, isGenerating, isCompleted]);

  // PRODUCTION REPLICATE CODE - USES OPTIMIZED IMAGES
  const startGeneration = useCallback(async () => {
    try {
      console.log('üöÄ Starting try-on generation...');
      setError(null);
      setGeneratedImage(null);
      setProgress(0);
      setProcessingStatus('starting');
      setIsCompleted(false);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä–æ–º iPhone)
      const generation = await replicateService.generateTryOn(
        tryOnData.personImage, // –£–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        tryOnData.outfitImage, // –£–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        'stylish outfit'
      );

      setPredictionId(generation.id);
      setProcessingStatus('generating');
      
      // –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
      generation.wait((newProgress) => {
        console.log('Generation progress:', newProgress);
        setProgress(newProgress);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if (newProgress <= 25) {
          setProcessingStatus('analyzing');
        } else if (newProgress <= 75) {
          setProcessingStatus('generating');
        } else if (newProgress < 100) {
          setProcessingStatus('finalizing');
        }
        // –ü—Ä–∏ 100% handleSuccess —É—Å—Ç–∞–Ω–æ–≤–∏—Ç completed –∏ isCompleted = true
      }).then(handleSuccess).catch(handleError);
      
    } catch (error) {
      handleError(error);
    }
  }, [tryOnData, handleSuccess, handleError]);

  /* MOCK FUNCTION FOR TESTING - COMMENTED BUT KEPT FOR FUTURE TESTS
  const startMockGeneration = useCallback(() => {
    console.log('üöÄ Starting MOCK generation...');
    setError(null);
    setGeneratedImage(null);
    setProgress(0);
    setProcessingStatus('starting');
    setIsCompleted(false);
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º ID –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    setPredictionId('mock-prediction-' + Date.now());
    setProcessingStatus('generating');
    
    // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    let currentProgress = 0;
    const progressInterval = setInterval(() => {
      currentProgress += 2 + Math.random() * 3; // 2-5% –∑–∞ —à–∞–≥
      
      if (currentProgress >= 100) {
        currentProgress = 100;
        clearInterval(progressInterval);
        
        // –ó–∞–≤–µ—Ä—à–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å —Ç–µ—Å—Ç–æ–≤—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        setTimeout(() => {
          handleSuccess({
            output: '/assets/images/test_output.jpg' // –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
          });
        }, 500);
      }
      
      setProgress(currentProgress);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
      if (currentProgress <= 25) {
        setProcessingStatus('analyzing');
      } else if (currentProgress <= 75) {
        setProcessingStatus('generating');
      } else if (currentProgress < 100) {
        setProcessingStatus('finalizing');
      }
    }, 200); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 200ms
    
  }, [handleSuccess]);
  */

  // –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (tryOnData && !predictionId && !error && !generatedImage) {
      setTimeout(() => {
        startGeneration(); // PRODUCTION REPLICATE CALL
        // startMockGeneration(); // MOCK CALL FOR TESTING - COMMENTED
      }, 1000);
    }
  }, [tryOnData, predictionId, error, generatedImage, startGeneration]);

  const handleRetry = () => {
    setIsRetrying(true);
    setError(null);
    setGeneratedImage(null);
    setPredictionId(null);
    setIsCompleted(false);
    
    setTimeout(() => {
      setIsRetrying(false);
      startGeneration(); // PRODUCTION REPLICATE CALL
      // startMockGeneration(); // MOCK CALL FOR TESTING - COMMENTED
    }, 500);
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–≤ 2 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ)
  const generateParticles = () => {
    return Array.from({ length: 50 }, (_, i) => { // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 25 –¥–æ 50
      const size = Math.random() * 2 + 1;
      const speed = Math.random() * 5 + 4;
      const delay = Math.random() * 3;
      
      return (
        <motion.div
          key={i}
          className="absolute rounded-full bg-white/30"
          style={{
            width: `${size}px`,
            height: `${size}px`,
          }}
          initial={{
            x: Math.random() * 400,
            y: Math.random() * 400,
            opacity: 0,
            scale: 0
          }}
          animate={{
            x: Math.random() * 400,
            y: Math.random() * 400,
            opacity: [0, 0.4, 0.2, 0],
            scale: [0, 1, 0.3, 0]
          }}
          transition={{
            duration: speed,
            repeat: Infinity,
            delay: delay,
            ease: "easeInOut"
          }}
        />
      );
    });
  };

  return (
    <div className="min-h-screen bg-white flex flex-col relative">
      {/* –õ–æ–≥–æ—Ç–∏–ø –≤ —Ü–µ–Ω—Ç—Ä–µ —Å–≤–µ—Ä—Ö—É */}
      <div className="absolute top-6 left-1/2 transform -translate-x-1/2 z-30">
        <Logo size="small" className="text-gray-900" />
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è - –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω—ã —á—Ç–æ–±—ã –Ω–µ –≤–ª–∏—è—Ç—å –Ω–∞ layout */}
      {showControls && (
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 1.5 }}
          className="absolute top-6 left-0 right-0 z-30 flex justify-center gap-4"
        >
          {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
          <motion.button
            onClick={onBack}
            className="flex items-center gap-3 px-6 py-3 bg-gray-50 hover:bg-gray-100 text-gray-700 font-medium rounded-xl border border-gray-200 transition-all duration-200 shadow-sm hover:shadow-md"
            whileHover={{ scale: 1.02, y: -1 }}
            whileTap={{ scale: 0.98 }}
          >
            <ArrowLeft size={18} />
            <span>Back to Upload</span>
          </motion.button>

          {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–≤—Ç–æ—Ä–∞ */}
          <motion.button
            onClick={handleRetry}
            disabled={isRetrying}
            className="flex items-center gap-3 px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded-xl transition-all duration-200 shadow-sm hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed"
            whileHover={{ scale: 1.02, y: -1 }}
            whileTap={{ scale: 0.98 }}
          >
            <RotateCcw size={18} className={isRetrying ? 'animate-spin' : ''} />
            <span>{isRetrying ? 'Retrying...' : 'Try Again'}</span>
          </motion.button>
        </motion.div>
      )}

      {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É */}
      {process.env.NODE_ENV === 'development' && (
        <div className="absolute top-6 left-6 z-30 bg-black bg-opacity-70 text-white text-xs p-2 rounded max-w-xs">
          <div>isGenerating: {isGenerating ? 'true' : 'false'}</div>
          <div>outfitImage exists: {tryOnData?.outfitImage ? 'true' : 'false'}</div>
          <div>outfitImage.url: {tryOnData?.outfitImage?.url ? 'exists' : 'missing'}</div>
          {tryOnData?.outfitImage?.url && (
            <div className="break-all">URL: {tryOnData.outfitImage.url.substring(0, 50)}...</div>
          )}
        </div>
      )}

      {/* –ü—Ä–µ–≤—å—é –æ–¥–µ–∂–¥—ã –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
      {isGenerating && tryOnData?.outfitImage && (
        <motion.div
          initial={{ opacity: 0, scale: 0.8, x: 20 }}
          animate={{ opacity: 1, scale: 1, x: 0 }}
          exit={{ opacity: 0, scale: 0.8 }}
          className="absolute top-6 right-6 z-20 w-20 h-24 bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden"
        >
          <img
            src={tryOnData.outfitImage.url}
            alt="Outfit preview"
            className="w-full h-full object-contain p-1"
            onError={(e) => {
              console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–≤—å—é –æ–¥–µ–∂–¥—ã:', e);
              console.log('üîç –ü—ã—Ç–∞–ª–∏—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å URL:', tryOnData.outfitImage.url);
            }}
          />
          <div className="absolute -bottom-1 -right-1 w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center">
            <motion.div
              className="w-3 h-3 bg-white rounded-full"
              animate={{ scale: [1, 1.2, 1] }}
              transition={{ duration: 1, repeat: Infinity }}
            />
          </div>
          {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="absolute bottom-0 left-0 text-xs bg-black bg-opacity-50 text-white p-1 rounded">
            Preview
          </div>
        </motion.div>
      )}

      {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç - –≤—Å–µ–≥–¥–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ —ç–∫—Ä–∞–Ω–∞ */}
      <div className="flex-1 flex items-center justify-center p-4">
        <motion.div
          className="relative w-80 h-80 sm:w-96 sm:h-96 rounded-lg overflow-hidden border border-gray-200 bg-gray-50"
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.8 }}
        >
          {/* –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä - –∑–∞–±–ª—é—Ä–µ–Ω–Ω–æ–µ –ø—Ä–µ–≤—å—é */}
          <div className="absolute inset-0">
            {/* –ó–∞–±–ª—é—Ä–µ–Ω–Ω–æ–µ –ø—Ä–µ–≤—å—é - –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑–∞–Ω–æ –∫–æ–≥–¥–∞ –µ—Å—Ç—å */}
            {lowResBlurImage && (
              <img
                src={lowResBlurImage}
                alt="Blurred preview"
                className="w-full h-full object-cover"
                style={{
                  filter: 'blur(20px) brightness(1.1)',
                }}
              />
            )}

            {/* Fallback –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –µ—Å–ª–∏ –Ω–µ—Ç –∑–∞–±–ª—é—Ä–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–≤—å—é */}
            {!lowResBlurImage && (
              <div className="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200" />
            )}
          </div>

          {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º—ã—Ç–∏—è –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
          {isGenerating && (
            <div 
              className="absolute inset-0 z-5"
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                backdropFilter: 'blur(5px)',
              }}
            />
          )}

          {/* –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –ø–ª–∞–≤–Ω–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø–æ–≤–µ—Ä—Ö –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞ */}
          {generatedImage && (
            <motion.div
              className="absolute inset-0"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.8, ease: "easeOut" }}
            >
              <img
                src={generatedImage}
                alt="Generated outfit"
                className="w-full h-full object-cover"
              />
            </motion.div>
          )}

          {/* Blur overlay –¥–ª—è ChatGPT-–∞–Ω–∏–º–∞—Ü–∏–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
          {(isGenerating || generatedImage) && (
            <div
              ref={blurOverlayRef}
              className="absolute inset-0 pointer-events-none z-10"
              style={{
                background: 'linear-gradient(180deg, rgba(240,240,240,0.98) 0%, rgba(240,240,240,0.95) 5%, rgba(240,240,240,0.9) 15%, rgba(240,240,240,0.7) 30%, rgba(240,240,240,0.4) 50%, rgba(240,240,240,0.2) 70%, rgba(240,240,240,0.05) 85%, transparent 95%)',
                backdropFilter: 'blur(25px)',
                WebkitBackdropFilter: 'blur(25px)',
                transform: 'translateY(0%)', // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
                display: 'block'
              }}
            />
          )}

          {/* –ß–∞—Å—Ç–∏—Ü—ã —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
          {isGenerating && (
            <div className="absolute inset-0 overflow-hidden pointer-events-none z-5">
              {generateParticles()}
            </div>
          )}

          {/* –û–≤–µ—Ä–ª–µ–π —Å –æ—à–∏–±–∫–æ–π */}
          {error && (
            <div className="absolute inset-0 flex items-center justify-center bg-red-50/95 backdrop-blur-sm z-20">
              <div className="text-center p-6">
                <div className="text-4xl mb-3">‚ö†Ô∏è</div>
                <p className="text-red-600 font-medium mb-4">Generation failed</p>
                <p className="text-gray-600 text-sm mb-4">{error}</p>
              </div>
            </div>
          )}
        </motion.div>
      </div>

      {/* –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ —Å–Ω–∏–∑—É - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ —á—Ç–æ–±—ã –Ω–µ –ø–æ–¥–ø—Ä—ã–≥–∏–≤–∞–ª–æ */}
      <div className="text-center p-6">
        <div className="h-6 flex items-center justify-center"> {/* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ */}
          <AnimatePresence mode="wait">
            {processingStatus === 'starting' && (
              <motion.p
                key="starting"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                className="text-gray-600 text-sm"
              >
                Preparing AI model...
              </motion.p>
            )}
            {processingStatus === 'analyzing' && (
              <motion.p
                key="analyzing"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                className="text-gray-600 text-sm"
              >
                Analyzing images...
              </motion.p>
            )}
            {processingStatus === 'generating' && (
              <motion.p
                key="generating"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                className="text-gray-600 text-sm"
              >
                <span>Creating image. May take a moment...</span>
                {progress > 0 && (
                  <span className="inline-block w-12 text-left ml-1">
                    {Math.round(progress)}%
                  </span>
                )}
              </motion.p>
            )}
            {processingStatus === 'finalizing' && (
              <motion.p
                key="finalizing"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                className="text-gray-600 text-sm"
              >
                Finalizing result...
              </motion.p>
            )}
            {processingStatus === 'completed' && !error && (
              <motion.p
                key="completed"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                className="text-green-600 text-sm font-medium"
              >
                Generation complete! üéâ
              </motion.p>
            )}
            {error && (
              <motion.p
                key="error"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                className="text-red-600 text-sm font-medium"
              >
                Something went wrong. Please try again.
              </motion.p>
            )}
          </AnimatePresence>
        </div>
      </div>
    </div>
  );
};

export default ProcessingPage; 