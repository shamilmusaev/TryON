// –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
class UserImageStorage {
  constructor() {
    this.storageKey = 'user_uploaded_images';
    this.lastUsedKey = 'lastUsedImages';
  }

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  getAllImages() {
    try {
      const stored = localStorage.getItem(this.storageKey);
      return stored ? JSON.parse(stored) : [];
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error);
      return [];
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  saveImage(imageData, type = 'person') {
    if (!imageData || !imageData.url) {
      console.error('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', imageData);
      return null;
    }

    try {
      let images = this.getAllImages();
      
      const { file, ...storableImageData } = imageData;

      const newImage = {
        ...storableImageData,
        id: `img_${new Date().getTime()}_${Math.random().toString(36).substr(2, 9)}`,
        type: type, // 'person' or 'outfit'
        uploadedAt: new Date().toISOString(),
      };

      // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é —ç—Ç–æ–≥–æ —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
      images = images.filter(img => img.id !== newImage.id && img.url !== newImage.url);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
      images.unshift(newImage);

      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      const MAX_IMAGES = 50;
      if (images.length > MAX_IMAGES) {
        images = images.slice(0, MAX_IMAGES);
      }
      
      localStorage.setItem(this.storageKey, JSON.stringify(images));
      this.setLastUsedImage(newImage);
      
      console.log(`üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∏–ø–∞ "${type}" —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ. ID: ${newImage.id}. –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${images.length}`);
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å —Ñ–∞–π–ª–æ–º –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      return { ...newImage, file };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ localStorage:', error);
      if (error instanceof SyntaxError) {
        console.warn('–û—á–∏—Å—Ç–∫–∞ localStorage –∏–∑-–∑–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ JSON.');
        localStorage.removeItem(this.storageKey);
      }
      return null;
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É
  getImagesByType(type) {
    const images = this.getAllImages();
    return images.filter(img => img.type === type)
                 .sort((a, b) => new Date(b.uploadedAt) - new Date(a.uploadedAt));
  }

  // –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Ç–∏–ø—É
  getLastUsedImage(type) {
    try {
      const images = this.getAllImages();
      return images.find(img => img.type === type && img.isLastUsed);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
      return null;
    }
  }

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  setLastUsedImage(imageData) {
    if (!imageData) return;
    try {
      let images = this.getAllImages();
      
      images = images.map(i => ({ ...i, isLastUsed: i.id === imageData.id }));
      
      localStorage.setItem(this.storageKey, JSON.stringify(images));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
    }
  }

  // –£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  deleteImage(imageId) {
    try {
      let images = this.getAllImages();
      const updatedImages = images.filter(img => img.id !== imageId);
      localStorage.setItem(this.storageKey, JSON.stringify(updatedImages));
      console.log(`üóëÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ. ID: ${imageId}`);
      return true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ localStorage:', error);
      return false;
    }
  }

  // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  clearAll() {
    try {
      localStorage.removeItem(this.storageKey);
      localStorage.removeItem(this.lastUsedKey);
      console.log('‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã');
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error);
      return false;
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  getStats() {
    const images = this.getAllImages();
    const personImages = images.filter(img => img.type === 'person');
    const outfitImages = images.filter(img => img.type === 'outfit');
    
    return {
      total: images.length,
      person: personImages.length,
      outfit: outfitImages.length,
      storageSize: this.getStorageSize()
    };
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
  getStorageSize() {
    try {
      const data = localStorage.getItem(this.storageKey);
      return data ? new Blob([data]).size : 0;
    } catch (error) {
      return 0;
    }
  }

  // –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
  generateId() {
    return `img_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }

  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å File –≤ base64 –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
  async fileToBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => resolve(reader.result);
      reader.onerror = error => reject(error);
    });
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ localStorage
  isStorageSupported() {
    try {
      const test = '__storage_test__';
      localStorage.setItem(test, test);
      localStorage.removeItem(test);
      return true;
    } catch {
      return false;
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const userImageStorage = new UserImageStorage();

export default userImageStorage; 