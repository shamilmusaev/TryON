import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { ThemeProvider, useTheme } from "./contexts/ThemeContext";
import './index.css';
import OnboardingPage from './components/OnboardingPage';
import HomePage from './components/HomePage';
import ProcessingPage from './components/ProcessingPage';
import ResultPage from './components/ResultPage';


function AppContent() {
  const { isDark } = useTheme();
  const [currentView, setCurrentView] = useState('home'); // home, processing, result, onboarding, wardrobe
  const [tryOnData, setTryOnData] = useState(null); // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  const [resultData, setResultData] = useState(null); // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è Safari iOS
  useEffect(() => {
    // –§–∏–∫—Å–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É viewport –¥–ª—è iOS Safari
    const setVH = () => {
      const vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', `${vh}px`);
    };

    setVH();
    window.addEventListener('resize', setVH);
    window.addEventListener('orientationchange', setVH);

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º zoom –Ω–∞ double tap –≤ Safari
    let lastTouchEnd = 0;
    const preventZoom = (e) => {
      const now = (new Date()).getTime();
      if (now - lastTouchEnd <= 300) {
        e.preventDefault();
      }
      lastTouchEnd = now;
    };
    
    document.addEventListener('touchend', preventZoom, { passive: false });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º theme-color –¥–ª—è Safari
    const metaThemeColor = document.querySelector('meta[name="theme-color"]');
    if (!metaThemeColor) {
      const meta = document.createElement('meta');
      meta.name = 'theme-color';
      meta.content = '#000000';
      document.head.appendChild(meta);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º meta –¥–ª—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    const metaViewport = document.querySelector('meta[name="viewport"]');
    if (metaViewport) {
      metaViewport.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover';
    }

    return () => {
      window.removeEventListener('resize', setVH);
      window.removeEventListener('orientationchange', setVH);
      document.removeEventListener('touchend', preventZoom);
    };
  }, []);

  // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  const handleNavigation = (page, data = null) => {
    console.log(`üì± Navigating to: ${page}`, data ? '(with data)' : '');
    
    if (data) {
      if (page === 'processing') {
        setTryOnData(data);
      } else if (page === 'result') {
        setResultData(data);
      }
    }
    
    setCurrentView(page);
  };

  // –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ try-on
  const handleStartTryOn = () => {
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    // –û—Å—Ç–∞–≤–ª—è–µ–º –µ–µ –ø—É—Å—Ç–æ–π –∏–ª–∏ —É–¥–∞–ª—è–µ–º, –µ—Å–ª–∏ –æ–Ω–∞ –±–æ–ª—å—à–µ –Ω–∏–≥–¥–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
  };



  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
  const handleProcessingComplete = (generationResult) => {
    console.log('‚úÖ Processing complete, showing result...', generationResult);
    handleNavigation('result', generationResult);
  };

  // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  const handleBack = () => {
    switch (currentView) {
      case 'processing':
      case 'result':
      case 'onboarding':
      case 'wardrobe':
        handleNavigation('home');
        break;
      default:
        handleNavigation('home');
    }
  };

  // –†–µ–Ω–¥–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const renderCurrentPage = () => {
    switch (currentView) {
      case 'home':
        return (
          <HomePage
            onStartProcessing={handleStartTryOn}
            onNavigation={handleNavigation}
          />
        );

      case 'processing':
        return (
          <ProcessingPage
            onBack={handleBack}
            onComplete={handleProcessingComplete}
            tryOnData={tryOnData}
          />
        );

      case 'result':
        return (
          <ResultPage
            onBack={handleBack}
            onNavigation={handleNavigation}
            resultData={resultData}
          />
        );



      case 'onboarding':
        return (
          <OnboardingPage
            onBack={handleBack}
            onNavigation={handleNavigation}
          />
        );

      default:
        return (
          <HomePage
            onStartProcessing={handleStartTryOn}
            onNavigation={handleNavigation}
          />
        );
    }
  };

  return (
    <div className={`min-h-screen overflow-hidden transition-all duration-500 ${
      isDark 
        ? 'gradient-bg text-white' 
        : 'gradient-bg-light text-primary-light'
    }`}>
      {/* Page transitions */}
      <AnimatePresence mode="wait">
        <motion.div
          key={currentView}
          initial={{ opacity: 0, x: 100 }}
          animate={{ opacity: 1, x: 0 }}
          exit={{ opacity: 0, x: -100 }}
          transition={{ duration: 0.3 }}
        >
          {renderCurrentPage()}
        </motion.div>
      </AnimatePresence>

      {/* Global error boundary */}
      {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å ErrorBoundary –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–¥–µ—Å—å */}
      
      {/* Service worker –¥–ª—è offline support */}
      {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å PWA —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª */}
    </div>
  );
}

function App() {
  return (
    <ThemeProvider>
      <AppContent />
    </ThemeProvider>
  );
}

export default App; 